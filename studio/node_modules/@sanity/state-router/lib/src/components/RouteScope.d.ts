import PropTypes from 'prop-types';
import React from 'react';
import { InternalRouter, NavigateOptions, RouterProviderContext } from './types';
declare type Props = {
    scope: string;
    children: React.ReactNode;
};
export default class RouteScope extends React.Component<Props> {
    context: RouterProviderContext;
    __internalRouter: InternalRouter;
    static childContextTypes: {
        __internalRouter: PropTypes.Requireable<object>;
    };
    static contextTypes: {
        __internalRouter: PropTypes.Requireable<object>;
    };
    constructor(props: Props, context: RouterProviderContext);
    getChildContext(): RouterProviderContext;
    getScopedState: () => any;
    resolvePathFromState: (nextState: Object) => string;
    navigate: (nextState: Object, options?: NavigateOptions) => void;
    render(): JSX.Element;
}
export {};
