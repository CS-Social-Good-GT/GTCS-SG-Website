"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _router = require("part:@sanity/base/router");

var _ToolSwitcherWidget = _interopRequireDefault(require("./ToolSwitcherWidget"));

var _ToolSwitcherItem = _interopRequireDefault(require("./ToolSwitcherItem"));

var _ToolSwitcherWidget2 = _interopRequireDefault(require("./styles/ToolSwitcherWidget.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class ToolSwitcher extends _react.default.PureComponent {
  constructor() {
    super(...arguments);

    _defineProperty(this, "renderItem", (tool, showIcon) => {
      var _this$props = this.props,
          activeToolName = _this$props.activeToolName,
          router = _this$props.router,
          isVisible = _this$props.isVisible,
          onSwitchTool = _this$props.onSwitchTool,
          direction = _this$props.direction,
          showLabel = _this$props.showLabel;
      var tabIndex = isVisible ? '0' : '-1';
      return /*#__PURE__*/_react.default.createElement(_router.StateLink, {
        state: _objectSpread(_objectSpread({}, router.state), {}, {
          tool: tool.name,
          [tool.name]: undefined
        }),
        onClick: onSwitchTool,
        className: _ToolSwitcherWidget2.default.link,
        tabIndex: tabIndex
      }, /*#__PURE__*/_react.default.createElement(_ToolSwitcherItem.default, {
        direction: direction,
        icon: tool.icon,
        showIcon: showIcon,
        showLabel: showLabel,
        title: tool.title || tool.name,
        label: tool.title || tool.name,
        isActive: activeToolName === tool.name
      }));
    });
  }

  render() {
    var tools = this.props.tools;
    if (!tools || tools.length <= 1) return null;
    return /*#__PURE__*/_react.default.createElement(_ToolSwitcherWidget.default, _extends({}, this.props, {
      renderItem: this.renderItem,
      tools: tools
    }));
  }

}

ToolSwitcher.defaultProps = {
  direction: 'horizontal',
  tools: []
};
ToolSwitcher.propTypes = {
  activeToolName: _propTypes.default.string,
  onSwitchTool: _propTypes.default.func,
  direction: _propTypes.default.oneOf(['horizontal', 'vertical']),
  router: _propTypes.default.shape({
    state: _propTypes.default.object
  }),
  tools: _propTypes.default.arrayOf(_propTypes.default.shape({
    name: _propTypes.default.string.isRequired,
    icon: _propTypes.default.func
  }))
};

var _default = (0, _router.withRouterHOC)(ToolSwitcher);

exports.default = _default;