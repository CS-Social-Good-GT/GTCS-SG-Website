"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _DocumentPane = _interopRequireDefault(require("./DocumentPane"));

var _withInitialValue = _interopRequireDefault(require("../../utils/withInitialValue"));

var _reactHooks = require("@sanity/react-hooks");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var DocumentPaneProvider = (0, _withInitialValue.default)(props => {
  var _useDocumentOperation = (0, _reactHooks.useDocumentOperation)(props.options.id, props.options.type),
      patch = _useDocumentOperation.patch;

  var editState = (0, _reactHooks.useEditState)(props.options.id, props.options.type);

  var _useValidationStatus = (0, _reactHooks.useValidationStatus)(props.options.id, props.options.type),
      markers = _useValidationStatus.markers;

  var connectionState = (0, _reactHooks.useConnectionState)(props.options.id, props.options.type);
  var onChange = React.useCallback(patches => {
    patch.execute(patches, props.initialValue);
  }, [patch]);
  var value = editState && (editState.draft || editState.published) || props.initialValue;
  return /*#__PURE__*/React.createElement(_DocumentPane.default, _extends({}, props, {
    onChange: onChange,
    markers: markers,
    connectionState: connectionState,
    value: value,
    draft: editState && editState.draft,
    published: editState && editState.published
  }));
});
var _default = DocumentPaneProvider;
exports.default = _default;