"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _rxjs = require("rxjs");

var _listItem = _interopRequireDefault(require("part:@sanity/components/history/list-item"));

var _user = _interopRequireDefault(require("part:@sanity/base/user"));

var _dateFns = require("date-fns");

var _PaneRouterContext = require("../../contexts/PaneRouterContext");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var EMPTY_PARAMS = {};
var dateFormat = 'MMM D, YYYY, hh:mm A';

function getDateString(date) {
  if ((0, _dateFns.isToday)(date)) {
    return "Today, ".concat((0, _dateFns.format)(date, 'hh:mm A'));
  }

  if ((0, _dateFns.isYesterday)(date)) {
    return "Yesterday, ".concat((0, _dateFns.format)(date, 'hh:mm A'));
  }

  return (0, _dateFns.format)(date, dateFormat);
}

function getHumanReadableStatus(type) {
  if (type === 'discardDraft') return 'Discarded Edits';
  if (type === 'truncated') return 'Truncated Events';
  if (type === 'unknown') return 'Edited';
  return type;
}

class HistoryItem extends _react.default.PureComponent {
  constructor() {
    super(...arguments);

    _defineProperty(this, "handleEnterKey", event => {
      this.props.onClick();
    });

    _defineProperty(this, "handleArrowDownKey", () => {
      this.props.onSelectNext();
    });

    _defineProperty(this, "handleArrowUpKey", () => {
      this.props.onSelectPrev();
    });

    _defineProperty(this, "state", {
      users: []
    });
  }

  componentDidMount() {
    var userIds = this.props.userIds;

    if (!userIds) {
      return;
    }

    this.usersSubscription = (0, _rxjs.from)(_user.default.getUsers(userIds)).subscribe(users => {
      this.setState({
        users
      });
    });
  }

  componentWillUnmount() {
    if (this.usersSubscription) {
      this.usersSubscription.unsubscribe();
    }
  }

  render() {
    var _this$context = this.context,
        ParameterizedLink = _this$context.ParameterizedLink,
        params = _this$context.params;
    var _this$props = this.props,
        type = _this$props.type,
        endTime = _this$props.endTime,
        isSelected = _this$props.isSelected,
        isCurrentVersion = _this$props.isCurrentVersion,
        rev = _this$props.rev,
        onClick = _this$props.onClick;
    var users = this.state.users;

    var oldRev = params.rev,
        linkParams = _objectWithoutProperties(params, ["rev"]);

    return /*#__PURE__*/_react.default.createElement(_listItem.default, {
      linkComponent: ParameterizedLink,
      linkParams: Object.keys(linkParams).length === 0 ? EMPTY_PARAMS : linkParams,
      isCurrentVersion: isCurrentVersion,
      status: getHumanReadableStatus(type),
      type: type,
      title: getDateString(endTime),
      tooltip: (0, _dateFns.format)(endTime, dateFormat),
      rev: rev,
      users: users,
      onSelect: onClick,
      onEnterKey: this.handleEnterKey,
      onArrowUpKey: this.handleArrowUpKey,
      onArrowDownKey: this.handleArrowDownKey,
      isSelected: isSelected
    });
  }

}

exports.default = HistoryItem;

_defineProperty(HistoryItem, "contextType", _PaneRouterContext.PaneRouterContext);

_defineProperty(HistoryItem, "defaultProps", {
  isSelected: false,
  userIds: undefined
});

_defineProperty(HistoryItem, "propTypes", {
  endTime: _propTypes.default.string.isRequired,
  isCurrentVersion: _propTypes.default.bool.isRequired,
  isSelected: _propTypes.default.bool,
  onClick: _propTypes.default.func.isRequired,
  onSelectNext: _propTypes.default.func,
  onSelectPrev: _propTypes.default.func,
  rev: _propTypes.default.string.isRequired,
  type: _propTypes.default.oneOf(['created', 'deleted', 'edited', 'published', 'unpublished', 'truncated', 'discardDraft', 'unknown']).isRequired,
  userIds: _propTypes.default.arrayOf(_propTypes.default.string)
});