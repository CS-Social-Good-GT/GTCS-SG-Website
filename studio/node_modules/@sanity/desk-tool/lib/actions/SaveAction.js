"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SaveAction = SaveAction;

var _reactHooks = require("@sanity/react-hooks");

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function SaveAction(_ref) {
  var id = _ref.id,
      type = _ref.type,
      onComplete = _ref.onComplete;

  var _useDocumentOperation = (0, _reactHooks.useDocumentOperation)(id, type),
      commit = _useDocumentOperation.commit;

  return {
    disabled: Boolean(commit.disabled),
    label: 'Save',
    onHandle: function () {
      var _onHandle = _asyncToGenerator(function* () {
        yield commit.execute();
        onComplete();
      });

      function onHandle() {
        return _onHandle.apply(this, arguments);
      }

      return onHandle;
    }()
  };
}