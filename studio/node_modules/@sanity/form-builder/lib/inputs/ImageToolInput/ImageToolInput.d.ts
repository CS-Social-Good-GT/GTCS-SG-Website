import React from 'react';
import { Type } from '../../typedefs';
import PatchEvent from '../../PatchEvent';
declare type Hotspot = {
    x: number;
    y: number;
    height: number;
    width: number;
};
declare type Crop = {
    left: number;
    right: number;
    top: number;
    bottom: number;
};
interface Value {
    hotspot?: Hotspot;
    crop?: Crop;
}
declare type Props = {
    imageUrl: string;
    value?: Value;
    onChange: (arg0: PatchEvent) => void;
    readOnly: boolean | null;
    level: number;
    type: Type;
};
declare type ImageToolInputState = {
    value: any;
};
export default class ImageToolInput extends React.Component<Props, ImageToolInputState> {
    constructor(props: any);
    handleChangeEnd: () => void;
    handleChange: (nextValue: Value) => void;
    UNSAFE_componentWillReceiveProps(nextProps: any): void;
    render(): JSX.Element;
}
export {};
