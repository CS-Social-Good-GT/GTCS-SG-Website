import React, { RefObject } from 'react';
import PatchEvent from '../../../PatchEvent';
import { BlockContentFeatures, FormBuilderValue, Marker, RenderBlockActions, RenderCustomMarkers, SlateComponentProps, SlateEditor, SlateMarkProps, SlateSchema, SlateValue, Type, UndoRedoStack } from './typeDefs';
import { Path } from '../../typedefs/path';
declare type PasteProgressResult = {
    status: string | null;
    error?: Error;
};
declare type OnPasteResult = ({
    insert?: FormBuilderValue[];
    path?: [];
} | Error) | null;
declare type OnPasteResultOrPromise = (OnPasteResult | Promise<OnPasteResult>) | null;
declare type OnPasteFn = (arg0: {
    event: React.SyntheticEvent;
    path: [];
    type: Type;
    value: FormBuilderValue[] | null;
}) => OnPasteResultOrPromise;
declare type Props = {
    blockContentFeatures: BlockContentFeatures;
    editorValue: SlateValue;
    focusPath: Path;
    fullscreen: boolean;
    markers: Marker[];
    onBlur: (nextPath: []) => void;
    onChange: (editor: SlateEditor, callback?: (arg0: void) => void) => void;
    onFocus: (arg0: Path) => void;
    onLoading: (props: {}) => void;
    onPaste?: OnPasteFn;
    onPatch: (event: PatchEvent) => void;
    onToggleFullScreen: (event: React.SyntheticEvent<any>) => void;
    readOnly?: boolean;
    renderBlockActions?: RenderBlockActions;
    renderCustomMarkers?: RenderCustomMarkers;
    scrollContainer: React.RefObject<HTMLDivElement>;
    setFocus: (arg0: void) => void;
    type: Type;
    undoRedoStack: UndoRedoStack;
    userIsWritingText: boolean;
    value: FormBuilderValue[] | null;
};
export default class Editor extends React.Component<Props, {}> {
    static defaultProps: {
        readOnly: boolean;
        onPaste: any;
        renderCustomMarkers: any;
        renderBlockActions: any;
    };
    blockDragMarker: HTMLDivElement | null;
    editorSchema: SlateSchema;
    editor: RefObject<any>;
    plugins: any[];
    constructor(props: Props);
    componentDidMount(): void;
    componentDidUpdate(prevProps: Props): void;
    trackFocusPath(): void;
    handleChange: (editor: any) => void;
    handleEditorFocus: (event: any, editor: any, next: (arg0: void) => void) => void;
    getValue: () => FormBuilderValue[];
    getEditor: () => any;
    handlePasteProgress: ({ status }: PasteProgressResult) => void;
    handleShowBlockDragMarker: (pos: string, node: HTMLDivElement) => void;
    handleHideBlockDragMarker: () => void;
    handlePaste: (event: React.SyntheticEvent<Element, Event>, editor: any, next: () => void) => void | Promise<any>;
    handleCopy: (event: React.SyntheticEvent<Element, Event>, editor: any, next: (arg0: void) => void) => any;
    handleDrag: (event: React.DragEvent<Element>, editor: any, next: (arg0: void) => void) => true | void;
    handleToggleFullscreen: (event: React.SyntheticEvent<Element, Event>, editor: any, next: (arg0: void) => void) => true | void;
    handleCancelEvent: (event: React.SyntheticEvent<Element, Event>) => void;
    refBlockDragMarker: (blockDragMarker: HTMLDivElement) => void;
    renderNode: (props: SlateComponentProps) => JSX.Element;
    renderMark: (props: SlateMarkProps) => JSX.Element;
    render(): JSX.Element;
}
export {};
