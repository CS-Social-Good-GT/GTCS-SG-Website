"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _chevronDownIcon = _interopRequireDefault(require("part:@sanity/base/chevron-down-icon"));

var _button = _interopRequireDefault(require("part:@sanity/components/toggles/button"));

var _CollapsibleButtonGroup = _interopRequireDefault(require("./styles/CollapsibleButtonGroup.css"));

var _poppable = _interopRequireDefault(require("part:@sanity/components/utilities/poppable"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class CollapsibleButtonGroup extends _react.default.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "state", {
      isOpen: false
    });

    _defineProperty(this, "handleOpen", () => {
      this.setState({
        isOpen: true
      });
    });

    _defineProperty(this, "handleClose", () => {
      this.setState({
        isOpen: false
      });
    });

    _defineProperty(this, "handleToggle", () => {
      var isOpen = this.state.isOpen;

      if (isOpen) {
        this.handleClose();
      } else {
        this.handleOpen();
      }
    });
  }

  render() {
    var _this$props = this.props,
        icon = _this$props.icon,
        children = _this$props.children;
    var isOpen = this.state.isOpen;
    var Icon = icon;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: _CollapsibleButtonGroup.default.root
    }, /*#__PURE__*/_react.default.createElement(_button.default, {
      onClick: this.handleToggle
    }, /*#__PURE__*/_react.default.createElement(Icon, null), /*#__PURE__*/_react.default.createElement(_chevronDownIcon.default, null), /*#__PURE__*/_react.default.createElement(_poppable.default, {
      onClickOutside: this.handleClose,
      onEscape: this.handleClose
    }, isOpen && /*#__PURE__*/_react.default.createElement("div", {
      className: _CollapsibleButtonGroup.default.popup
    }, children))));
  }

}

exports.default = CollapsibleButtonGroup;