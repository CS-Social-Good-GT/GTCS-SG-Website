import React from 'react';
import PatchEvent from '../../../PatchEvent';
import { BlockContentFeatures, Marker, FormBuilderValue, SlateEditor, SlateValue, RenderBlockActions, RenderCustomMarkers } from './typeDefs';
import { Path } from '../../typedefs/path';
declare type Props = {
    blockContentFeatures: BlockContentFeatures;
    editor: SlateEditor | null;
    editorValue: SlateValue | null;
    fullscreen: boolean;
    markers: Marker[];
    onFocus: (path: Path) => void;
    onPatch: (event: PatchEvent) => void;
    renderBlockActions?: RenderBlockActions;
    renderCustomMarkers?: RenderCustomMarkers;
    userIsWritingText: boolean;
    value: FormBuilderValue[] | null;
};
declare type State = {
    visible: boolean;
};
export default class BlockExtrasOverlay extends React.Component<Props, State> {
    _setVisibleTimer: any;
    _setVisibleRequest: number;
    state: {
        visible: boolean;
    };
    componentDidMount(): void;
    componentWillUnmount(): void;
    shouldComponentUpdate(nextProps: Props): boolean;
    renderBlockExtras: (node: any) => JSX.Element;
    render(): JSX.Element;
}
export {};
