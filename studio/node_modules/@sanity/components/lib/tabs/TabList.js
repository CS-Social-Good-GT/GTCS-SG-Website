"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _TabList = _interopRequireDefault(require("./TabList.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class TabList extends _react.default.PureComponent {
  constructor(props) {
    super(props);

    _defineProperty(this, "handleTabFocus", tabIdx => {
      this.setState({
        focusedTabIdx: tabIdx
      });
    });

    _defineProperty(this, "handleKeyDown", evt => {
      var numTabs = this.props.children.length;

      if (evt.key === 'ArrowLeft') {
        this.setState(state => {
          var focusedTabIdx = state.focusedTabIdx < 1 ? numTabs - 1 : state.focusedTabIdx - 1;
          return {
            focusedTabIdx
          };
        });
      }

      if (evt.key === 'ArrowRight') {
        this.setState(state => {
          var focusedTabIdx = (state.focusedTabIdx + 1) % numTabs;
          return {
            focusedTabIdx
          };
        });
      }
    });

    this.state = {
      focusedTabIdx: -1
    };
  }

  render() {
    var focusedTabIdx = this.state.focusedTabIdx;
    var children = this.props.children.map((child, idx) => {
      return _react.default.cloneElement(child, {
        isFocused: focusedTabIdx === idx,
        onFocus: () => this.handleTabFocus(idx)
      });
    });
    return /*#__PURE__*/_react.default.createElement("div", {
      className: _TabList.default.root,
      onKeyDown: this.handleKeyDown,
      role: "tablist"
    }, /*#__PURE__*/_react.default.createElement("div", null, children));
  }

}

exports.default = TabList;

_defineProperty(TabList, "defaultProps", {
  children: null
});

_defineProperty(TabList, "propTypes", {
  children: _propTypes.default.node
});