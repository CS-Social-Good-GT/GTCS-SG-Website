"use strict";

var _react = _interopRequireDefault(require("react"));

var _storybook = require("part:@sanity/storybook");

var _createDocument = _interopRequireDefault(require("part:@sanity/components/previews/create-document"));

var _default = _interopRequireDefault(require("part:@sanity/components/previews/default"));

var _detail = _interopRequireDefault(require("part:@sanity/components/previews/detail"));

var _inline = _interopRequireDefault(require("part:@sanity/components/previews/inline"));

var _media = _interopRequireDefault(require("part:@sanity/components/previews/media"));

var _card = _interopRequireDefault(require("part:@sanity/components/previews/card"));

var _block = _interopRequireDefault(require("part:@sanity/components/previews/block"));

var _blockImage = _interopRequireDefault(require("part:@sanity/components/previews/block-image"));

var _knobs = require("part:@sanity/storybook/addons/knobs");

var _sanity = _interopRequireDefault(require("part:@sanity/storybook/addons/sanity"));

var _warningIcon = _interopRequireDefault(require("part:@sanity/base/warning-icon"));

var _linkIcon = _interopRequireDefault(require("part:@sanity/base/link-icon"));

var _fileIcon = _interopRequireDefault(require("part:@sanity/base/file-icon"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable react/no-multi-comp, complexity */
var renderMedia = dimensions => {
  return /*#__PURE__*/_react.default.createElement("img", {
    src: "http://www.fillmurray.com/300/300",
    alt: "test"
  });
};

var renderStatus = options => {
  return /*#__PURE__*/_react.default.createElement("span", null, "Status ", /*#__PURE__*/_react.default.createElement(_linkIcon.default, null), " ", /*#__PURE__*/_react.default.createElement(_warningIcon.default, null));
};

var renderTitle = options => {
  return /*#__PURE__*/_react.default.createElement("span", null, "This ", /*#__PURE__*/_react.default.createElement("span", {
    style: {
      color: 'green'
    }
  }, "is"), " a ", /*#__PURE__*/_react.default.createElement("strong", null, "title"), "\xA0in the layout ", options.layout);
};

var renderSubtitle = options => {
  return /*#__PURE__*/_react.default.createElement("span", null, "This is a", ' ', /*#__PURE__*/_react.default.createElement("strong", {
    style: {
      color: 'red'
    }
  }, /*#__PURE__*/_react.default.createElement(_warningIcon.default, null), "subtitle"));
};

var renderDescription = options => {
  return /*#__PURE__*/_react.default.createElement("span", null, "This is the", ' ', /*#__PURE__*/_react.default.createElement("strong", {
    style: {
      color: 'red'
    }
  }, /*#__PURE__*/_react.default.createElement(_warningIcon.default, null), "description"));
};

var renderCustomChildren = () => {
  return /*#__PURE__*/_react.default.createElement("div", {
    style: {
      position: 'absolute',
      top: '0',
      left: '0',
      width: '100%',
      height: '100%',
      overflow: 'hidden',
      pointerEvents: 'none'
    }
  }, /*#__PURE__*/_react.default.createElement("div", {
    style: {
      position: 'absolute',
      top: '0',
      right: '0'
    }
  }, /*#__PURE__*/_react.default.createElement("div", {
    style: {
      position: 'absolute',
      fontSize: '10px',
      textTransform: 'uppercase',
      top: '0',
      right: '0',
      fontWeight: '700',
      boxShadow: '0 0 5px rgba(0,0,0,0.2)',
      backgroundColor: 'yellow',
      padding: '0.2em 3em',
      transform: 'translate(28%, 43%) rotate(45deg)'
    }
  }, "New")));
};

var style = {
  height: '100vh',
  position: 'absolute',
  top: 0,
  left: 0,
  bottom: 0,
  right: 0,
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',
  padding: '1em'
};

var centered = function centered(storyFn) {
  return /*#__PURE__*/_react.default.createElement("div", {
    style: style
  }, /*#__PURE__*/_react.default.createElement("div", {
    style: {
      width: "".concat((0, _knobs.number)('width', 300, {
        range: true,
        min: 100,
        max: 2000
      }, 'test'), "px")
    }
  }, storyFn()));
};

var options = {
  functions: 'Functions',
  strings: 'Strings',
  elements: 'Element'
};
(0, _storybook.storiesOf)('Previews').addDecorator(centered).addDecorator(_knobs.withKnobs).add('Default', () => {
  var propType = (0, _knobs.select)('Type of props', options, 'strings');

  if (propType === 'functions') {
    return /*#__PURE__*/_react.default.createElement(_sanity.default, {
      part: "part:@sanity/components/previews/default",
      propTables: [_default.default]
    }, /*#__PURE__*/_react.default.createElement(_default.default, {
      title: renderTitle,
      subtitle: renderSubtitle,
      description: renderDescription,
      status: renderStatus,
      media: renderMedia,
      isPlaceholder: (0, _knobs.boolean)('placeholder', false, 'props'),
      date: new Date(),
      progress: (0, _knobs.number)('progress', undefined, {
        range: true,
        min: 0,
        max: 100,
        step: 1
      }, 'props')
    }, (0, _knobs.boolean)('Custom children', false) && renderCustomChildren()));
  }

  if (propType === 'elements') {
    return /*#__PURE__*/_react.default.createElement(_sanity.default, {
      part: "part:@sanity/components/previews/default",
      propTables: [_default.default]
    }, /*#__PURE__*/_react.default.createElement(_default.default, {
      title: /*#__PURE__*/_react.default.createElement("span", null, "This ", /*#__PURE__*/_react.default.createElement("span", {
        style: {
          color: 'green'
        }
      }, "is"), " a ", /*#__PURE__*/_react.default.createElement("strong", null, "test")),
      subtitle: /*#__PURE__*/_react.default.createElement("span", null, "This is a ", /*#__PURE__*/_react.default.createElement("strong", {
        style: {
          color: 'red'
        }
      }, "subtitle")),
      description: /*#__PURE__*/_react.default.createElement("span", null, "This is the long the descriptions that should no be to long, beacuse we will cap it"),
      isPlaceholder: (0, _knobs.boolean)('placeholder', false, 'props'),
      media: (0, _knobs.boolean)('Show image', true, 'test') ? renderMedia : undefined,
      status: /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement(_linkIcon.default, null), /*#__PURE__*/_react.default.createElement(_warningIcon.default, null)),
      date: new Date(),
      progress: (0, _knobs.number)('progress', undefined, {
        range: true,
        min: 0,
        max: 100,
        step: 1
      }, 'props')
    }, (0, _knobs.boolean)('Custom children', false, 'test') && renderCustomChildren()));
  }

  return /*#__PURE__*/_react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/previews/default",
    propTables: [_default.default]
  }, /*#__PURE__*/_react.default.createElement(_default.default, {
    title: (0, _knobs.text)('title', 'This is the title an it is very long, so long that it should be ellipsed', 'props'),
    subtitle: (0, _knobs.text)('subtitle', "This is the title an it is very long, so long that it should be ellipsed.\n               This is the title an it is very long, so long that it should be ellipsed", 'props'),
    description: (0, _knobs.text)('description', 'This is the long the descriptions that should no be to long, beacuse we will cap it', 'props'),
    status: (0, _knobs.text)('status', '🔔 🐣 👻', 'props'),
    media: (0, _knobs.boolean)('Show image', true, 'props') ? renderMedia : undefined,
    isPlaceholder: (0, _knobs.boolean)('placeholder', false, 'props'),
    date: new Date(),
    progress: (0, _knobs.number)('progress', undefined, {
      range: true,
      min: 0,
      max: 100,
      step: 1
    }, 'props')
  }, (0, _knobs.boolean)('Custom children', false, 'test') && renderCustomChildren()));
}).add('Card', () => {
  var propType = (0, _knobs.select)('Type of props', options, 'strings');

  if (propType === 'functions') {
    return /*#__PURE__*/_react.default.createElement(_sanity.default, {
      part: "part:@sanity/components/previews/card",
      propTables: [_card.default]
    }, /*#__PURE__*/_react.default.createElement(_card.default, {
      title: renderTitle,
      subtitle: renderSubtitle,
      description: renderDescription,
      date: (0, _knobs.boolean)('date', true, 'test') ? new Date() : false,
      status: renderStatus,
      media: renderMedia,
      isPlaceholder: (0, _knobs.boolean)('placeholder', true, 'props'),
      mediaDimensions: {
        width: 300,
        height: 225,
        aspect: (0, _knobs.number)('mediaDimensions.aspect', 4 / 3, 'props'),
        fit: 'crop'
      }
    }, (0, _knobs.boolean)('Custom children', false, 'test') && renderCustomChildren()));
  }

  if (propType === 'elements') {
    return /*#__PURE__*/_react.default.createElement(_sanity.default, {
      part: "part:@sanity/components/previews/card",
      propTables: [_card.default]
    }, /*#__PURE__*/_react.default.createElement(_card.default, {
      title: /*#__PURE__*/_react.default.createElement("span", null, "This ", /*#__PURE__*/_react.default.createElement("span", {
        style: {
          color: 'green'
        }
      }, "is"), " a ", /*#__PURE__*/_react.default.createElement("strong", null, "test")),
      subtitle: /*#__PURE__*/_react.default.createElement("span", null, "This is a ", /*#__PURE__*/_react.default.createElement("strong", {
        style: {
          color: 'red'
        }
      }, "subtitle")),
      description: /*#__PURE__*/_react.default.createElement("span", null, "This is the long the descriptions that should no be to long, beacuse we will cap it"),
      isPlaceholder: (0, _knobs.boolean)('placeholder', false, 'props'),
      media: (0, _knobs.boolean)('Show image', false) ? renderMedia : undefined,
      status: /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement(_linkIcon.default, null), /*#__PURE__*/_react.default.createElement(_warningIcon.default, null)),
      date: (0, _knobs.boolean)('date', true) ? new Date() : false,
      mediaDimensions: {
        width: 300,
        height: 225,
        aspect: (0, _knobs.number)('mediaDimensions.aspect', 4 / 3, 'props'),
        fit: 'crop'
      }
    }, (0, _knobs.boolean)('Custom children', false, 'test') && renderCustomChildren()));
  }

  return /*#__PURE__*/_react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/previews/card",
    propTables: [_card.default]
  }, /*#__PURE__*/_react.default.createElement(_card.default, {
    title: (0, _knobs.text)('title', 'Bill Murray', 'props'),
    subtitle: (0, _knobs.text)('subtitle', 'American actor', 'props'),
    description: (0, _knobs.text)('description', 'William James Murray is an American actor, comedian, and writer. He first gained exposure on Saturday Night Live, a series of performances that earned him his first Emmy Award, and later starred in.', 'props'),
    date: (0, _knobs.boolean)('date', true, 'test') ? new Date() : false,
    status: (0, _knobs.text)('status', '🔔 🐣 👻', 'props'),
    media: (0, _knobs.boolean)('Show image', true, 'test') ? renderMedia : undefined,
    isPlaceholder: (0, _knobs.boolean)('isPlaceholder', false, 'props'),
    mediaDimensions: {
      width: 300,
      height: 225,
      aspect: (0, _knobs.number)('mediaDimensions.aspect', 4 / 3, 'props'),
      fit: 'crop'
    }
  }, (0, _knobs.boolean)('Custom children', false) && renderCustomChildren()));
}).add('Detail', () => {
  var propType = (0, _knobs.select)('Type of props', options, 'strings');

  if (propType === 'functions') {
    return /*#__PURE__*/_react.default.createElement(_sanity.default, {
      part: "part:@sanity/components/previews/detail",
      propTables: [_detail.default]
    }, /*#__PURE__*/_react.default.createElement(_detail.default, {
      title: renderTitle,
      subtitle: renderSubtitle,
      description: renderDescription,
      status: renderStatus,
      date: new Date(),
      media: renderMedia,
      isPlaceholder: (0, _knobs.boolean)('isplaceholder', false, 'props')
    }, (0, _knobs.boolean)('Custom children', false, 'test') && renderCustomChildren()));
  }

  if (propType === 'elements') {
    return /*#__PURE__*/_react.default.createElement(_sanity.default, {
      part: "part:@sanity/components/previews/detail",
      propTables: [_detail.default]
    }, /*#__PURE__*/_react.default.createElement(_detail.default, {
      title: /*#__PURE__*/_react.default.createElement("span", null, "This ", /*#__PURE__*/_react.default.createElement("span", {
        style: {
          color: 'green'
        }
      }, "is"), " a ", /*#__PURE__*/_react.default.createElement("strong", null, "test")),
      subtitle: /*#__PURE__*/_react.default.createElement("span", null, "This is a ", /*#__PURE__*/_react.default.createElement("strong", {
        style: {
          color: 'red'
        }
      }, "subtitle")),
      description: /*#__PURE__*/_react.default.createElement("span", null, "This is the long the descriptions that should no be to long, beacuse we will cap it"),
      status: /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement(_linkIcon.default, null), /*#__PURE__*/_react.default.createElement(_warningIcon.default, null)),
      isPlaceholder: (0, _knobs.boolean)('placeholder', false, 'props'),
      media: (0, _knobs.boolean)('Show image', false, 'test') ? renderMedia : undefined,
      date: (0, _knobs.boolean)('date', true, 'test') ? new Date() : false
    }, (0, _knobs.boolean)('Custom children', false, 'test') && renderCustomChildren()));
  }

  return /*#__PURE__*/_react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/previews/detail",
    propTables: [_detail.default]
  }, /*#__PURE__*/_react.default.createElement(_detail.default, {
    title: (0, _knobs.text)('title (prop)', 'This is the title', 'props'),
    subtitle: (0, _knobs.text)('subtitle', 'This is the subtitle', 'props'),
    description: (0, _knobs.text)('description', 'This is the long the descriptions that should no be to long, beacuse we will cap it', 'props'),
    status: (0, _knobs.text)('status', '🔔 🐣 👻', 'props'),
    date: new Date(),
    media: renderMedia,
    isPlaceholder: (0, _knobs.boolean)('isplaceholder', false, 'props')
  }, (0, _knobs.boolean)('Custom children', false, 'test') && renderCustomChildren()));
}).add('Media', () => {
  return /*#__PURE__*/_react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/previews/media",
    propTables: [_media.default]
  }, /*#__PURE__*/_react.default.createElement(_media.default, {
    title: (0, _knobs.text)('title (prop)', 'This is the title', 'props'),
    subtitle: (0, _knobs.text)('subtitle (prop)', 'This is the subtitle', 'props'),
    description: (0, _knobs.text)('description', 'This is the long the descriptions that should no be to long, beacuse we will cap it', 'props'),
    date: (0, _knobs.boolean)('date', true, 'test') ? new Date() : false,
    media: renderMedia,
    isPlaceholder: (0, _knobs.boolean)('isplaceholder', false, 'props')
  }, (0, _knobs.boolean)('Custom children', false, 'test') && renderCustomChildren()));
}).add('Inline', () => {
  var propType = (0, _knobs.select)('Type of props', options, 'strings');

  if (propType === 'functions') {
    return /*#__PURE__*/_react.default.createElement(_sanity.default, {
      part: "part:@sanity/components/previews/inline",
      propTables: [_inline.default]
    }, /*#__PURE__*/_react.default.createElement("p", null, "This is a text, and suddenly a inline preview appearst before", /*#__PURE__*/_react.default.createElement(_inline.default, {
      title: renderTitle,
      media: renderMedia,
      isPlaceholder: (0, _knobs.boolean)('isPlaceholder', false, 'props')
    }, (0, _knobs.boolean)('Custom children', false, 'test') && /*#__PURE__*/_react.default.createElement("span", null, "This is custom children")), "this word."));
  }

  if (propType === 'elements') {
    return /*#__PURE__*/_react.default.createElement(_sanity.default, {
      part: "part:@sanity/components/previews/inline",
      propTables: [_inline.default]
    }, /*#__PURE__*/_react.default.createElement("p", null, "This is a text, and suddenly a inline preview appearst before", /*#__PURE__*/_react.default.createElement(_inline.default, {
      title: /*#__PURE__*/_react.default.createElement("span", null, "title"),
      media: renderMedia,
      isPlaceholder: (0, _knobs.boolean)('isPlaceholder', false, 'props')
    }, (0, _knobs.boolean)('Custom children', false, 'test') && /*#__PURE__*/_react.default.createElement("span", null, "This is custom children")), "this word."));
  }

  return /*#__PURE__*/_react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/previews/inline",
    propTables: [_inline.default]
  }, /*#__PURE__*/_react.default.createElement("p", null, "This is a text, and suddenly a inline preview appearst before", /*#__PURE__*/_react.default.createElement(_inline.default, {
    title: (0, _knobs.text)('title', 'This is the title', 'props'),
    media: renderMedia,
    date: (0, _knobs.boolean)('date', true, 'test') ? new Date() : false,
    isPlaceholder: (0, _knobs.boolean)('isPlaceholder', false, 'props')
  }, (0, _knobs.boolean)('Custom children', false, 'test') && /*#__PURE__*/_react.default.createElement("span", null, "This is custom children")), "this word."));
}).add('Block', () => {
  var propType = (0, _knobs.select)('Type of props', options, 'strings');

  if (propType === 'functions') {
    return /*#__PURE__*/_react.default.createElement(_sanity.default, {
      part: "part:@sanity/components/previews/detail",
      propTables: [_detail.default]
    }, /*#__PURE__*/_react.default.createElement(_block.default, {
      title: renderTitle,
      subtitle: renderSubtitle,
      description: renderDescription,
      status: renderStatus,
      date: new Date(),
      media: renderMedia,
      isPlaceholder: (0, _knobs.boolean)('isplaceholder', false, 'props')
    }, (0, _knobs.boolean)('Custom children', false, 'test') && renderCustomChildren()));
  }

  if (propType === 'elements') {
    return /*#__PURE__*/_react.default.createElement(_sanity.default, {
      part: "part:@sanity/components/previews/detail",
      propTables: [_detail.default]
    }, /*#__PURE__*/_react.default.createElement(_block.default, {
      title: /*#__PURE__*/_react.default.createElement("span", null, "This ", /*#__PURE__*/_react.default.createElement("span", {
        style: {
          color: 'green'
        }
      }, "is"), " a ", /*#__PURE__*/_react.default.createElement("strong", null, "test")),
      subtitle: /*#__PURE__*/_react.default.createElement("span", null, "This is a ", /*#__PURE__*/_react.default.createElement("strong", {
        style: {
          color: 'red'
        }
      }, "subtitle")),
      description: /*#__PURE__*/_react.default.createElement("span", null, "This is the long the descriptions that should no be to long, beacuse we will cap it"),
      status: /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement(_linkIcon.default, null), /*#__PURE__*/_react.default.createElement(_warningIcon.default, null)),
      isPlaceholder: (0, _knobs.boolean)('placeholder', false, 'props'),
      media: (0, _knobs.boolean)('Show image', false, 'test') ? renderMedia : undefined,
      date: (0, _knobs.boolean)('date', true, 'test') ? new Date() : false
    }, (0, _knobs.boolean)('Custom children', false, 'test') && renderCustomChildren()));
  }

  return /*#__PURE__*/_react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/previews/detail",
    propTables: [_detail.default]
  }, /*#__PURE__*/_react.default.createElement(_block.default, {
    title: (0, _knobs.text)('title', 'This is the title', 'props'),
    subtitle: (0, _knobs.text)('subtitle', 'This is the subtitle', 'props'),
    description: (0, _knobs.text)('description', 'This is the description', 'props'),
    status: (0, _knobs.text)('status', 'status', 'props'),
    date: new Date(),
    media: renderMedia,
    isPlaceholder: (0, _knobs.boolean)('isplaceholder', false, 'props')
  }, (0, _knobs.boolean)('Custom children', false, 'test') && renderCustomChildren()));
}).add('Block image', () => {
  var propType = (0, _knobs.select)('Type of props', options, 'strings');

  if (propType === 'functions') {
    return /*#__PURE__*/_react.default.createElement(_sanity.default, {
      part: "part:@sanity/components/previews/detail",
      propTables: [_detail.default]
    }, /*#__PURE__*/_react.default.createElement(_blockImage.default, {
      title: renderTitle,
      subtitle: renderSubtitle,
      description: (0, _knobs.boolean)('description', false, 'props') ? renderDescription : '',
      status: renderStatus,
      date: new Date(),
      media: renderMedia,
      isPlaceholder: (0, _knobs.boolean)('isplaceholder', false, 'props')
    }, (0, _knobs.boolean)('Custom children', false) && renderCustomChildren()));
  }

  if (propType === 'elements') {
    return /*#__PURE__*/_react.default.createElement(_sanity.default, {
      part: "part:@sanity/components/previews/detail",
      propTables: [_detail.default]
    }, /*#__PURE__*/_react.default.createElement(_blockImage.default, {
      title: /*#__PURE__*/_react.default.createElement("span", null, "This ", /*#__PURE__*/_react.default.createElement("span", {
        style: {
          color: 'green'
        }
      }, "is"), " a ", /*#__PURE__*/_react.default.createElement("strong", null, "test")),
      subtitle: /*#__PURE__*/_react.default.createElement("span", null, "This is a ", /*#__PURE__*/_react.default.createElement("strong", {
        style: {
          color: 'red'
        }
      }, "subtitle")),
      description: /*#__PURE__*/_react.default.createElement("span", null, "This is the long the ", /*#__PURE__*/_react.default.createElement("strong", {
        style: {
          color: 'magenta'
        }
      }, "description"), "\xA0 that should no be to long, beacuse we will cap it. But this is an element, and that is why it is har to cap. This is the long the", ' ', /*#__PURE__*/_react.default.createElement("strong", {
        style: {
          color: 'magenta'
        }
      }, "description"), "\xA0 that should no be to long, beacuse we will cap it. But this is an element, and that is why it is har to cap."),
      status: /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement(_linkIcon.default, null), /*#__PURE__*/_react.default.createElement(_warningIcon.default, null)),
      isPlaceholder: (0, _knobs.boolean)('placeholder', false, 'props'),
      media: (0, _knobs.boolean)('Show image', false, 'test') ? renderMedia : undefined,
      date: (0, _knobs.boolean)('date', true, 'test') ? new Date() : false
    }, (0, _knobs.boolean)('Custom children', false, 'props') && renderCustomChildren()));
  }

  return /*#__PURE__*/_react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/previews/detail",
    propTables: [_detail.default]
  }, /*#__PURE__*/_react.default.createElement(_blockImage.default, {
    title: (0, _knobs.text)('title', 'This is the title', 'props'),
    subtitle: (0, _knobs.text)('subtitle', 'This is the subtitle', 'props'),
    description: (0, _knobs.text)('description', 'This is the description', 'props'),
    status: (0, _knobs.text)('status', '🔔 🐣 👻', 'props'),
    date: (0, _knobs.boolean)('date', true) ? new Date() : false,
    media: renderMedia,
    isPlaceholder: (0, _knobs.boolean)('isplaceholder', false, 'props')
  }, (0, _knobs.boolean)('Custom children', false) && renderCustomChildren()));
}).add('Create document', () => {
  return /*#__PURE__*/_react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/previews/create-document",
    propTables: [_createDocument.default]
  }, /*#__PURE__*/_react.default.createElement(_createDocument.default // eslint-disable-next-line no-script-url
  , {
    params: {
      intent: 'create',
      type: 'test'
    },
    title: (0, _knobs.text)('title', 'Movie', 'props'),
    subtitle: (0, _knobs.text)('subtitle', 'Sci-fi', 'props'),
    description: (0, _knobs.text)('description', 'Science fiction is a genre of speculative fiction that has been called the "literature of ideas". It typically deals with imaginative and futuristic concepts such as advanced science and technology, time travel, parallel universes, fictional worlds, space exploration, and extraterrestrial life.', 'props'),
    icon: _fileIcon.default
  }));
});