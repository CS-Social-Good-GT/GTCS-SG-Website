@import 'part:@sanity/base/theme/variables-style';

:root {
  /* The height of the navbar */
  --nav-bar-box: 3.0625em; /* 49px */

  /* Expand/collapse animation timing */
  --pane-animation-time: 200ms;

  /* The height of the pane footer */
  --pane-footer-height: 4em;
}

.root {
  display: flex;
  flex-direction: column;
  background-color: var(--component-bg);
  min-height: calc(100vh - var(--nav-bar-box));
  width: 100%;

  @media (--screen-medium) {
    /* Reset mobile first */
    transition: box-shadow 0.1s linear;
    position: relative;
    height: 100%;
    top: initial;
    left: initial;
    min-height: initial;
  }
}

.isDisabled {
  display: none; /* hide on mobile */

  @media (--screen-medium) {
    display: flex;
  }
}

.isActive {
  display: flex;
}

.isCollapsed {
  @media (--screen-medium) {
    composes: root;
    margin-right: 0;
    border-color: var(--hairline-color);
    padding: 0;
    flex-direction: row;
    transition: box-shadow var(--pane-animation-time) var(--pane-animation-time) linear;
    background-image: linear-gradient(90deg, transparent, color(var(--text-color) a(10%)));
    background-size: 0.8rem 100%;
    background-repeat: no-repeat;
    background-position: right;
    height: 100%;
    overflow: hidden;
  }
}

.header {
  position: relative;
  position: sticky;
  top: 0;
  user-select: none;
  background-color: inherit;
  z-index: 1;

  @nest .isCollapsed & {
    background-color: transparent;
  }

  @nest &:after {
    content: '';
    display: block;
    position: absolute;
    left: 0;
    right: 0;
    bottom: -1px;
    border-bottom: 1px solid var(--hairline-color);
  }
}

.headerContent {
  z-index: 1;
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  flex-wrap: nowrap;
  flex-grow: 1;
  align-items: stretch;
  align-self: flex-end;
  box-sizing: border-box;
  width: 100%;

  @nest .isCollapsed & {
    min-width: 100vh;
  }
}

.actions {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.5em;

  @nest .isCollapsed & {
    display: none;
  }
}

.buttonWrapper {
  display: flex;
  align-items: stretch;
  align-self: stretch;
  justify-content: stretch;
  position: relative;
}

.actionButton {
  -webkit-appearance: none;
  -webkit-font-smoothing: inherit;
  appearance: none;
  background-color: transparent;
  color: var(--text-muted);
  font: inherit;
  border: 0;
  height: calc(1.5625em + 0.5em);
  width: calc(1.5625em + 0.5em);
  margin: 0;
  padding: 0.25em;
  display: flex;
  align-self: stretch;
  align-items: stretch;
  justify-content: stretch;
  outline: none;
  border-radius: 2px;
  box-sizing: border-box;

  @media (hover: hover) {
    @nest &:hover {
      color: inherit;
    }
  }

  @nest &:focus {
    background: var(--selectable-item-color-hover);
    color: inherit;
  }
}

.actionButtonInner {
  outline: none;
  display: flex;
  align-self: stretch;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;

  @nest & > svg {
    font-size: 1.5625em;
  }
}

.menuWrapper {
  composes: buttonWrapper;
  z-index: 2;

  @nest .isCollapsed & {
    display: none;
  }
}

.menuOverflowButton {
  composes: actionButton;
}

.menuOverflowButtonInner {
  composes: actionButtonInner;
}

.menuContainer {
  position: absolute;
  right: 0;
  bottom: 0;

  @nest & > div {
    position: absolute;
    right: var(--small-padding);
  }
}

.menuButton {
  display: block;
  text-align: center;
}

.title {
  box-sizing: border-box;
  margin: 0;
  padding: 1em;
  font-size: 1rem;
  line-height: calc(17 / 16);
  font-weight: 700;
  user-select: none;
  cursor: default;
  white-space: nowrap;
  overflow: hidden;
  max-width: 100%;
  width: stretch;
  text-overflow: ellipsis;
  margin-right: auto;
  transform-origin: 1.5em 1.5em;
  transform: rotate(0deg);
  transition: transform var(--pane-animation-time) linear;

  @nest .isCollapsed & {
    transform: rotate(90deg);
  }
}

.headerViewMenu {
  display: flex;
  margin-top: -0.5em;

  @nest .isCollapsed & {
    display: none;
  }
}

.headerTabsContainer {
  flex: 1;
  overflow: hidden;
}

.headerPaneActions {
  padding: 0 0.5em 0 0;

  @nest & button {
    vertical-align: top;
    -webkit-appearance: none;
    -webkit-font-smoothing: inherit;
    border: 0;
    padding: 0.25em;
    border-radius: 2px;
    background: none;
    color: var(--text-muted);
    outline: none;

    @nest & svg {
      vertical-align: top;
      font-size: 1.5625em; /* 25px */
      line-height: 1;
    }

    /* Focus wrapper */
    @nest & > div {
      outline: none;
    }

    @media (hover: hover) {
      @nest &:hover {
        color: inherit;
      }
    }

    @nest &:focus {
      background: var(--selectable-item-color-hover);
      color: inherit;
    }
  }
}

.functions {
  display: flex;
  align-items: flex-end;
  flex-wrap: nowrap;
  opacity: 1;
  z-index: 1;
  flex-direction: row;
  margin-left: 1em;
}

.functionsLarge {
  composes: functions;
}

.functionsSmall {
  composes: functions;
}

.main {
  /* NOTE: animation is disabled because it breaks tab navigation */
  /* opacity: 1; */
  /* transition: opacity var(--pane-animation-time) var(--pane-animation-time) linear; */

  position: relative;
  flex-grow: 1;
  display: flex;
  align-items: stretch;
  padding-bottom: var(--pane-footer-height);

  @nest .isCollapsed & {
    /* NOTE: animation is disabled because it breaks tab navigation */
    /* opacity: 0; */
    /* transition: opacity 0 0; */
    display: none;
  }
}

.scrollContainer {
  display: block;
  box-sizing: border-box;
  outline: none;

  @media (--screen-medium) {
    composes: scrollY from 'part:@sanity/base/theme/layout/scrolling-style';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 100%;
  }

  @media (--max-screen-medium) {
    /* Override default scrollcontainer  */
    transform: initial;
    position: initial;
    top: initial;
    left: initial;
    height: initial;
    width: 100%;
    overflow: initial;
  }

  @nest .isCollapsed & {
    display: none;
  }
}

.notScrollable {
  display: block;
  box-sizing: border-box;

  @media (--screen-medium) {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 100%;
  }

  @media (--max-screen-medium) {
    transform: initial;
    position: initial;
    top: initial;
    left: initial;
    height: initial;
    width: 100%;
    overflow: initial;
  }
}

.functionsButton {
  @nest .isCollapsed & {
    display: none;
  }
}

.functionsButtonText {
  white-space: nowrap;
  text-overflow: ellipsis;

  @nest .functionsSmall & {
    display: none;
  }

  @nest .isCollapsed & {
    display: none;
  }
}

.initialValueTemplateDropDownMenuButton {
  @nest & [class^='DropDownButton_button'] {
    width: 2.0625rem;
    border: 0 !important;
  }

  @nest & [class^='DropDownButton_button'] > span > span {
    margin: 0 !important;
  }

  @nest & [class^='DropDownButton_button']:hover {
    background-color: transparent;
  }
}

.initialValueTemplateDropDownItem {
  color: inherit;
  text-decoration: none;
  display: flex;
  justify-content: space-between;
  padding: 0 var(--small-padding);
}

.initialValueTemplateSubtitle {
  font-size: 0.7em;
  font-weight: 300;
  text-transform: capitalize;
}

.initialValueTemplateDropDownItemIcon {
  display: flex;
  align-items: center;
  font-size: var(--font-size-large);
  margin-left: var(--large-padding);
}

.stickyFooter {
  box-sizing: border-box;
  background-color: var(--component-bg);
  color: var(--text-color-secondary);
  z-index: var(--zindex-pane);

  @supports (padding-bottom: env(safe-area-inset-bottom)) {
    padding-bottom: env(safe-area-inset-bottom);
  }

  @media (--max-screen-medium) {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    width: 100%;
  }

  /* NOTE: Workaround for hiding the footer when the keyboard is visible on small screens */
  @media (max-height: 32em) {
    position: relative;
  }

  @media (--screen-medium) {
    position: relative;
  }

  @nest &:before {
    content: '';
    display: block;
    position: absolute;
    left: 0;
    right: 0;
    top: -1px;
    border-top: 1px solid var(--hairline-color);
  }

  @nest .isCollapsed & {
    display: none;
  }
}

.hoverFooter {
  composes: stickyFooter;

  @media (hover: hover) {
    display: none;

    @nest .root:hover & {
      display: block;
    }
  }
}
