"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _splitHorizontalIcon = _interopRequireDefault(require("part:@sanity/base/split-horizontal-icon"));

var _closeIcon = _interopRequireDefault(require("part:@sanity/base/close-icon"));

var _tab = _interopRequireDefault(require("part:@sanity/components/tabs/tab"));

var _tabList = _interopRequireDefault(require("part:@sanity/components/tabs/tab-list"));

var _Styleable = _interopRequireDefault(require("../utilities/Styleable"));

var _DefaultPane = _interopRequireDefault(require("./styles/DefaultPane.css"));

var _DefaultPane2 = _interopRequireDefault(require("./DefaultPane"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var noop = () => {}
/* intentional noop */
// eslint-disable-next-line
;

class TabbedPane extends _react.default.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "state", {});

    _defineProperty(this, "renderHeaderViewMenu", () => {
      var _this$props = this.props,
          styles = _this$props.styles,
          _this$props$views = _this$props.views,
          views = _this$props$views === void 0 ? [] : _this$props$views,
          onSplitPane = _this$props.onSplitPane,
          onCloseView = _this$props.onCloseView,
          isClosable = _this$props.isClosable;
      var isSplittable = Boolean(onSplitPane); // Do not render view menu when there are only 1 view

      if (views.length <= 1) return null;
      return /*#__PURE__*/_react.default.createElement("div", {
        className: styles.headerViewMenu
      }, this.renderTabs(), /*#__PURE__*/_react.default.createElement("div", {
        className: styles.headerPaneActions
      }, isSplittable && views.length > 1 && /*#__PURE__*/_react.default.createElement("button", {
        type: "button",
        onClick: onSplitPane,
        title: "Split pane right"
      }, /*#__PURE__*/_react.default.createElement("div", {
        tabIndex: -1
      }, /*#__PURE__*/_react.default.createElement(_splitHorizontalIcon.default, null))), isSplittable && isClosable && /*#__PURE__*/_react.default.createElement("button", {
        type: "button",
        onClick: onCloseView,
        title: "Close pane"
      }, /*#__PURE__*/_react.default.createElement("div", {
        tabIndex: -1
      }, /*#__PURE__*/_react.default.createElement(_closeIcon.default, null)))));
    });
  }

  renderTabs() {
    var _this$props2 = this.props,
        idPrefix = _this$props2.idPrefix,
        _this$props2$views = _this$props2.views,
        views = _this$props2$views === void 0 ? [] : _this$props2$views,
        activeView = _this$props2.activeView,
        styles = _this$props2.styles,
        onSetActiveView = _this$props2.onSetActiveView;

    if (views.length <= 1) {
      return null;
    }

    var tabPanelId = "".concat(idPrefix, "tabpanel");
    return /*#__PURE__*/_react.default.createElement("div", {
      className: styles.headerTabsContainer
    }, /*#__PURE__*/_react.default.createElement(_tabList.default, null, views.map((view, index) => /*#__PURE__*/_react.default.createElement(_tab.default, {
      id: "".concat(idPrefix, "tab-").concat(view.id),
      isActive: activeView === view.id,
      key: view.id,
      label: /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, view.title),
      icon: view.icon // eslint-disable-next-line react/jsx-no-bind
      ,
      onClick: () => onSetActiveView(index === 0 ? null : view.id),
      "aria-controls": tabPanelId
    }))));
  }

  render() {
    var _this$props3 = this.props,
        activeView = _this$props3.activeView,
        idPrefix = _this$props3.idPrefix,
        _this$props3$views = _this$props3.views,
        views = _this$props3$views === void 0 ? [] : _this$props3$views,
        onSetActiveView = _this$props3.onSetActiveView,
        onSplitPane = _this$props3.onSplitPane,
        onCloseView = _this$props3.onCloseView,
        rest = _objectWithoutProperties(_this$props3, ["activeView", "idPrefix", "views", "onSetActiveView", "onSplitPane", "onCloseView"]);

    var hasTabs = views.length > 1;
    return /*#__PURE__*/_react.default.createElement(_DefaultPane2.default, _extends({
      hasTabs: hasTabs,
      renderHeaderViewMenu: this.renderHeaderViewMenu,
      tabIdPrefix: idPrefix,
      viewId: activeView
    }, rest));
  }

}

_defineProperty(TabbedPane, "propTypes", {
  idPrefix: _propTypes.default.string.isRequired,
  styles: _propTypes.default.shape({
    headerTabsContainer: _propTypes.default.string,
    headerPaneActions: _propTypes.default.string,
    headerViewMenu: _propTypes.default.string
  }),
  views: _propTypes.default.arrayOf(_propTypes.default.shape({
    id: _propTypes.default.string.isRequired,
    title: _propTypes.default.string.isRequired
  })),
  activeView: _propTypes.default.string,
  isClosable: _propTypes.default.bool,
  onSetActiveView: _propTypes.default.func,
  onSplitPane: _propTypes.default.func,
  onCloseView: _propTypes.default.func
});

_defineProperty(TabbedPane, "defaultProps", {
  styles: {},
  views: [],
  activeView: undefined,
  isClosable: false,
  onSetActiveView: noop,
  onSplitPane: undefined,
  onCloseView: noop
});

var _default = (0, _Styleable.default)(TabbedPane, _DefaultPane.default);

exports.default = _default;