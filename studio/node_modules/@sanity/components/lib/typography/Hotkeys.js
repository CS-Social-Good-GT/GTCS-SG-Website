"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _Hotkeys = _interopRequireDefault(require("./styles/Hotkeys.css"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class Hotkeys extends _react.default.PureComponent {
  render() {
    var keys = this.props.keys;

    if (!keys || keys.length === 0) {
      return /*#__PURE__*/_react.default.createElement("span", null);
    }

    return /*#__PURE__*/_react.default.createElement("span", {
      className: _Hotkeys.default.root
    }, keys.map((key, i) => {
      return /*#__PURE__*/_react.default.createElement(_react.Fragment, {
        key: key
      }, /*#__PURE__*/_react.default.createElement("span", {
        className: _Hotkeys.default.key
      }, key), i < keys.length - 1 && /*#__PURE__*/_react.default.createElement("span", {
        className: _Hotkeys.default.seperator
      }, "+"));
    }));
  }

}

exports.default = Hotkeys;

_defineProperty(Hotkeys, "propTypes", {
  keys: _propTypes.default.arrayOf(_propTypes.default.string)
});