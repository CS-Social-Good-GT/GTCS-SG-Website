import React from 'react';
import { Subscription } from 'rxjs';
declare type Props = {
    hideDelay: number;
    element?: string;
    style?: {};
    children: (isVisible: boolean) => React.ReactNode;
};
declare type State = {
    isVisible: boolean;
};
export default class WithVisibility extends React.Component<Props, State> {
    element: React.RefObject<HTMLElement>;
    subscription: Subscription;
    state: {
        isVisible: any;
    };
    componentDidMount(): void;
    componentWillUnmount(): void;
    render(): React.ReactElement<{
        ref: React.RefObject<HTMLElement>;
        style: {
            minHeight: number;
            minWidth: number;
        };
    }, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)>) | (new (props: any) => React.Component<any, any, any>)>;
}
export {};
